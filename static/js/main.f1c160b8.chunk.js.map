{"version":3,"sources":["components/MyButton.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["styles","createMuiTheme","typography","button","textTransform","MyButton","children","onClick","ThemeProvider","theme","Button","color","variant","className","App","useState","typing","setTyping","text","setText","position","setPosition","Array","typo","setTypo","mSecond","setMSecond","second","setSecond","minute","setMinute","timeFlag","setTimeFlag","stayFlag","setStayFlag","resetButtonFlag","setResetButtonFlag","startDispFlag","setStartDispFlag","useInterval","timerReset","cpmText","length","toFixed","onKeyPress","e","Audio","play","textSpans","document","querySelector","key","classList","add","remove","indexOf","handleKey","tabIndex","Card","style","display","justifyContent","alignItems","height","width","border","Box","id","split","slice","map","char","k","a","Math","floor","random","sample","j","b","alp","cl","r","i","randomText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uRAKMA,EAASC,YAAe,CAC5BC,WAAW,CACTC,OAAO,CACLC,cAAc,WAmBLC,EAVE,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,SAASC,EAAoB,EAApBA,QAC1B,OACE,cAACC,EAAA,EAAD,CAAeC,MAAOT,EAAtB,SACE,cAACU,EAAA,EAAD,CAAQH,QAASA,EAASI,MAAM,UAAUC,QAAQ,YAAYC,UAAU,SAAxE,SACCP,O,wBCgJQQ,EA9JH,WAAO,IAAD,EACWC,oBAAS,GADpB,mBACVC,EADU,KACFC,EADE,OAEMF,mBAAS,iCAFf,mBAEVG,EAFU,KAELC,EAFK,OAGeJ,mBAAS,GAHxB,mBAGVK,EAHU,KAGAC,EAHA,OAION,mBAAS,IAAIO,MAAM,IAJ1B,mBAIVC,EAJU,KAIJC,EAJI,OAMYT,mBAAS,GANrB,mBAMVU,EANU,KAMFC,EANE,OAOUX,mBAAS,GAPnB,mBAOVY,EAPU,KAOHC,EAPG,OAQUb,mBAAS,GARnB,mBAQVc,EARU,KAQHC,EARG,OAUcf,oBAAS,GAVvB,mBAUVgB,EAVU,KAUDC,EAVC,OAYcjB,oBAAS,GAZvB,mBAYVkB,EAZU,KAYDC,EAZC,OAc6BnB,oBAAS,GAdtC,mBAcVoB,EAdU,KAcOC,EAdP,OAgByBrB,oBAAS,GAhBlC,mBAgBVsB,EAhBU,KAgBKC,EAhBL,KA6FjBC,aAAY,WACkBb,EAA1BD,GAAW,IAAMM,EAAoB,EAChCE,EAAqBR,EACbA,EAAU,KACzB,IAEa,KAAZA,IACFC,EAAWD,EAAU,GACrBG,EAAUD,EAAS,IAEN,KAAXA,IACFC,EAAU,GACVE,EAAUD,EAAS,IAGpB,IAAMW,EAAa,WAClBd,EAAW,GACXE,EAAU,GACVE,EAAU,IAILW,GAAU,+GADFvB,EAAKwB,QAAUjB,EAAQ,IAAME,EAAgB,GAAPE,GAAY,IAAIc,QAAQ,GAC/B,qBAE7C,OACC,qBAAK9B,UAAU,MAAM+B,WAAc,SAACC,GAAD,OA9DlB,SAACA,GAClB,GAAG7B,EAAO,CACT,IAAI8B,MAAM,uBAAuBC,OACjC,IAAIC,EAAYC,SAASC,cAAc,YAAa5C,SACjDuC,EAAEM,MAAQjC,EAAKE,IACjB4B,EAAU5B,GAAUgC,UAAUC,IAAI,iBAClCL,EAAU5B,GAAUgC,UAAUE,OAAO,kBAClClC,GAAYF,EAAKwB,OAAS,GAC5BM,EAAU5B,EAAW,GAAGP,UAAY,iBACpCQ,EAAYD,EAAW,KAEvBH,GAAU,GACVmB,GAAmB,GACnBF,GAAY,MAGkB,IAA5BX,EAAKgC,QAAQnC,IAAsD,kBAAlC4B,EAAU5B,GAAUP,YACvDW,EAAQ,GAAD,mBAAKD,GAAL,CAAUH,KACjB4B,EAAU5B,GAAUgC,UAAUC,IAAI,UA4CKG,CAAUX,IAAIY,SAAU,EAAlE,SAEC,cAACC,EAAA,EAAD,CAAMC,MAtGM,CACbC,QAAQ,OACRC,eAAe,SACfC,WAAY,SACZC,OAAQ,OACRC,MAAO,OACPC,OAAO,aAgGcrD,QAAQ,WAA5B,SACC,eAACsD,EAAA,EAAD,WACA,eAACA,EAAA,EAAD,WACD,gKACC7B,GAAiB,gCAAK,uEACdd,EAAKmB,OADS,iCAEV,IAAXtB,EAA6B,IAAdG,EAAKmB,QAAa,GAAKC,QAAQ,GAAK,KAAOA,QAAQ,IACjE,KAAK,EAAGpB,EAAKmB,OAAStB,IAAYuB,QAAQ,GAHtB,OAAL,iCAMZd,GAAQ,GAAK,EAAGA,EANJ,MAMeF,GAAQ,GAAK,EAAGA,EAN/B,MAM0CF,GAAS,GAAK,EAAGA,EAC7E,sBAAK0C,GAAG,UAAR,UACC,sBAAMtD,UAAU,gBAAhB,SAAiCK,EAAK,KACrCA,EACAkD,MAAM,IACNC,MAAM,GACNC,KAAI,SAAAC,GAAI,OACR,sBAAM1D,UAAU,kBAAhB,SAAmC0D,gBAOrC,eAACL,EAAA,EAAD,WACC,sBAAKrD,UAAU,UAAf,WACIG,GAAqB,IAAXI,GAAiB,cAAC,EAAD,CAAUb,QAhGvB,WACpBU,GAAWD,GACXgB,GAAY,GACZE,GAAY,GACZI,GAAiB,IA4FgB,mBAC7BH,GAAmB,cAAC,EAAD,CAAU5B,QAnElB,WACf,IADqB,EACjByC,EAAYC,SAASC,cAAc,YAAa5C,SAD/B,cAEN0C,GAFM,IAErB,IAAI,EAAJ,qBAAyB,SACtBnC,UAAY,mBAHM,8BAKrBmC,EAAU,GAAGnC,UAAY,kBA1DP,WAElB,IAAI,IAAI2D,EAAE,EAAGA,EAAE,EAAGA,IAMlB,IALA,IAEIC,EAAWC,KAAKC,MAAO,EAAAD,KAAKE,UAFpB,EAGRC,EAAS,GAELC,EAAE,EAAIA,EAAEL,EAAGK,IAAI,CAKvB,IAJA,IAAIC,EAAWL,KAAKC,MAAO,EAAAD,KAAKE,UANpB,EAORI,EAAM,6BACNC,EAAKD,EAAItC,OACTwC,EAAI,GACAC,EAAE,EAAGA,EAAEJ,EAAGI,IACjBD,GAAQF,EAAIN,KAAKC,MAAMD,KAAKE,SAASK,IAEtCJ,GAAkBK,EACfJ,EAAEL,EAAE,IAAEI,GAAkB,KAC3B1D,EAAQ0D,IAyCRO,GACA/D,EAAY,GACZG,EAAQ,IAAIF,MAAM,IAClBc,GAAmB,GACnBI,KAyDuB,sBAErB,qBAAK3B,UAAU,MAAf,SACGsB,GAAiBF,GAAaQ,gBCjJtB4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/C,SAASgD,eAAe,SAM1BZ,M","file":"static/js/main.f1c160b8.chunk.js","sourcesContent":["import React from \"react\"\nimport {createMuiTheme, ThemeProvider} from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\";\nimport \"../App.css\"\n\nconst styles = createMuiTheme({\n  typography:{\n    button:{\n      textTransform:\"none\",\n    },\n  },\n});\n\ntype Props = {\n  children: any,\n  onClick: () => void\n};\nconst MyButton = ({children,onClick}: Props) => {\n  return(\n    <ThemeProvider theme={styles}>\n      <Button onClick={onClick} color=\"primary\" variant=\"contained\" className=\"button\">\n      {children}\n      </Button>\n      </ThemeProvider>\n\n  );\n}\nexport default MyButton","import React,{useState} from 'react';\nimport MyButton from './components/MyButton';\nimport useInterval from \"use-interval\"\nimport \"./App.css\";\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\n\nconst App = () => {\n\tconst [typing, setTyping] = useState(false);\n\tconst [text,setText] = useState(\"Click the start button below!\");\n\tconst [position, setPosition] = useState(0);\n\tconst [typo, setTypo] = useState(new Array(0));\n\n\tconst [mSecond,setMSecond] = useState(0);\n\tconst [second,setSecond] = useState(0);\n\tconst [minute,setMinute] = useState(0);\n\n\tconst [timeFlag,setTimeFlag] = useState(true);\n\t//時間が止まっている間はtrue（最後の文字が入力されてからstartされるまで）\n\tconst [stayFlag,setStayFlag] = useState(false);\n\t//resetボタンが出ている間true (最後の文字が入力されてからresetされるで)\n\tconst [resetButtonFlag, setResetButtonFlag] = useState(false);\n\t//start画面\n\tconst [startDispFlag, setStartDispFlag] = useState(false);\n\n\tconst style = {\n\t\tdisplay:\"flex\",\n\t\tjustifyContent:\"center\",\n\t\talignItems: \"center\",\n\t\theight: \"44vh\",\n\t\twidth: \"50vw\",\n\t\tborder:\"1px solid\"\n\t}\n\n\tconst randomText = () =>{\n\t\t//５から１０までのランダムな数字\n\t\tfor(let k=0; k<1; k++){\n\t\tconst min = 2\n\t\tconst max = 8\n\t\tlet a:number = Math.floor( Math.random() * (max + 1 - min) ) + min ;\n\t\tlet sample = \"\"\n\n\t\tfor(let j=0 ; j<a; j++){\n\t\tlet b:number = Math.floor( Math.random() * (max + 1 - min) ) + min ;\n\t\tlet alp = \"abcdefghijklmnopqrstuvwxyz\";\n\t\tlet cl = alp.length;\n\t\tlet r = \"\";\n\t\tfor(let i=0; i<b; i++){\n\t\t\tr = r + alp[Math.floor(Math.random()*cl)];\n\t\t}\n\t\tsample = sample + r;\n\t\tif(j<a-1)sample = sample + \" \"\n\t\tsetText(sample)\n\t}}\n\t}\n\n\n\tconst typingToggle = () => {\n\t\tsetTyping( typing ? false : true )\n\t\tsetTimeFlag(false);\n\t\tsetStayFlag(false)\n\t\tsetStartDispFlag(true);\n\t}\n\tconst handleKey = (e: React.KeyboardEvent<HTMLDivElement>) =>{\n\t\tif(typing){\n\t\t\tnew Audio(\"./music/bgMusic.mp3\").play();\n\t\t\tlet textSpans = document.querySelector(\"#textbox\")!.children;\n\t\t\tif(e.key === text[position]){\n\t\t\t\ttextSpans[position].classList.add(\"typed-letters\");\n\t\t\t\ttextSpans[position].classList.remove(\"current-letter\");\n\t\t\t\tif(position <= text.length - 2){\n\t\t\t\t\ttextSpans[position + 1].className = \"current-letter\";\n\t\t\t\t\tsetPosition(position + 1);\n\t\t\t\t}else{\n\t\t\t\t\tsetTyping(false)\n\t\t\t\t\tsetResetButtonFlag(true)\n\t\t\t\t\tsetStayFlag(true)\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif(typo.indexOf(position) === -1 && textSpans[position].className !== \"typed-letters\"){\n\t\t\t\t\tsetTypo([...typo,position]);\n\t\t\t\t\ttextSpans[position].classList.add(\"typo\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst refresh = () => {\n\t\tlet textSpans = document.querySelector(\"#textbox\")!.children;\n\t\tfor(const i of textSpans){\n\t\t\ti.className = \"waiting-letters\";\n\t\t}\n\t\ttextSpans[0].className = \"current-letters\"\n\t\trandomText()\n\t\tsetPosition(0);\n\t\tsetTypo(new Array(0));\n\t\tsetResetButtonFlag(false)\n\t\ttimerReset();\n\t};\n\n\tuseInterval(()=>{\n\t\tif(mSecond >= 99 || timeFlag)setMSecond(0)\n\t\telse if(stayFlag) setMSecond(mSecond)\n\t\telse setMSecond(mSecond + 1)\n\t},10)\n\n\tif(mSecond === 98){\n\t\tsetMSecond(mSecond + 1)\n\t\tsetSecond(second + 1)\n\t}\n\tif(second === 60){\n\t\tsetSecond(0)\n\t\tsetMinute(minute + 1)\n\t}\n\n\tconst timerReset = () =>{\n\t\tsetMSecond(0);\n\t\tsetSecond(0);\n\t\tsetMinute(0);\n\t}\n\n\tconst cpm = ((text.length / (mSecond/100 + second + minute*60))*60).toFixed(2)\n\tconst cpmText = \"あなたのCPM(１分間あたりの入力文字数)は\"+cpm+\"です。\"\n\n\treturn (\n\t\t<div className='App' onKeyPress = {(e) => handleKey(e)} tabIndex={0}>\n\n\t\t\t<Card style={style} variant=\"outlined\">\n\t\t\t\t<Box>\n\t\t\t\t<Box>\n\t\t\t<h4>スタートボタンをダブルクリックしてください</h4>\n\t\t\t{startDispFlag && <div><div>\n\t\t\t\t ミスタイプ：{typo.length}　正確率：{\n\t\t\t\t\tposition===0 ? typo.length===1 ? 0.00.toFixed(2) : 100.00.toFixed(2) :\n\t\t\t\t\t(100*(1-(typo.length)/(position))).toFixed(2)\n\t\t\t\t\t}%\n\t\t\t</div>\n\t\t\t経過時間：{minute<=9 && 0}{minute} : {second<=9 && 0}{second} : {mSecond<=9 && 0}{mSecond}\n\t\t\t<div id=\"textbox\">\n\t\t\t\t<span className=\"typed-letters\">{text[0]}</span>\n\t\t\t\t{text\n\t\t\t\t.split(\"\")\n\t\t\t\t.slice(1)\n\t\t\t\t.map(char => (\n\t\t\t\t\t<span className=\"waiting-letters\">{char}</span>\n\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t}\n\t\t\t</Box>\n\t\t\t<Box>\n\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t{(!typing && position===0) && <MyButton onClick={typingToggle}>start</MyButton>}\n\t\t\t\t\t{resetButtonFlag && <MyButton onClick={refresh}>reset</MyButton>}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"cpm\">\n\t\t\t\t\t{(resetButtonFlag&&stayFlag) && cpmText}\n\t\t\t\t</div>\n\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t\t</Card>\n\t\t</div>\n\t);\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}